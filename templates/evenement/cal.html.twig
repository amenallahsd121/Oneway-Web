{% extends 'backbase.html.twig' %}

{% block title %}Calendrier{% endblock %}

{% block stylesheets %}
    <style>
        #calendrier{
            width: 100%;
            margin: auto;
            background-color: black;
        }
    </style>
{% endblock %}

{% block body %}
 

    <div id="calendrier">
    </div>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/fullcalendar@5.3.0/main.min.css" integrity="sha256-uq9PNlMzB+1h01Ij9cx7zeE2OR2pLAfRw3uUUOOPKdA=" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/fullcalendar@5.3.0/main.min.js" integrity="sha256-DBxkGZLxKsLKhz054qUpBqtotG00r9AELGpSigJujLg=" crossorigin="anonymous"></script>
{% endblock %}


 {# <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/fullcalendar@5.3.0/main.min.css" integrity="sha256-uq9PNlMzB+1h01Ij9cx7zeE2OR2pLAfRw3uUUOOPKdA=" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/fullcalendar@5.3.0/main.min.js" integrity="sha256-DBxkGZLxKsLKhz054qUpBqtotG00r9AELGpSigJujLg=" crossorigin="anonymous"></script>

<script>



    window.onload = () => {

          let events = {{ data|raw }}.concat({{ dataop|raw }});
        let calendarElt = document.querySelector("#calendrier");
        
        let calendar = new FullCalendar.Calendar(calendarElt, {
            initialView: 'dayGridMonth',
            locale: 'fr',
            timeZone: 'Europe/Paris',
            headerToolbar: {
                start: 'prev,next today',
                center: 'title',
                end: 'dayGridMonth,timeGridWeek'
            },
             events: events,
             editable: true,
            eventResizableFromStart: true,
            
               })
         calendar.on('eventChange', (e) => {
             let url =  'api/' + e.event.id + '/edit'
  
  let start = e.event.start.toISOString().substr(0, 10);

  let donnees = {
    "start": start
  };

           console.log(donnees)
           let xhr = new XMLHttpRequest
            xhr.open("POST", url)
            xhr.send(JSON.stringify(donnees))
  
            

                
            
            
        })
     

calendar.render();
    }
   
</script> #}
{% block javascripts %}


    <script>
    window.onload = () => {
            let calendarEl = document.querySelector("#calendrier");
            let calendar = new FullCalendar.Calendar(calendarEl, {
                initialView: 'dayGridMonth',
                locale: 'fr',
                timezone: 'Europe/Paris',
                headerToolbar: {
                    start: 'prev,next today',
                    center: 'title',
                    end: 'dayGridMonth,timeGridWeek'
                },
                events : {{ dataop|raw }},
                editable : true,
                eventResizableFormStart : true,
            })
            calendar.on('eventChange', (e) => {

               let url = 'api/'+e.event.id+'/edit'
                // let url = {{path('app_api_edit',{'id':"Re"})}}
                 //  url = url.replace("Re",e.event.id) 

                let donnees ={


                    
                    "start": e.event.start,
                   





                }
                console.log(donnees);
                let xhr = new XMLHttpRequest

                xhr.open("POST", url)
                xhr.send(JSON.stringify(donnees))
            })
                                calendar.render()

    

    }

    </script>

{% endblock %}